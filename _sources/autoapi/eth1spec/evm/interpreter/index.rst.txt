:mod:`eth1spec.evm.interpreter`
===============================

.. py:module:: eth1spec.evm.interpreter

Ethereum Virtual Machine (EVM) Interpreter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

A straightforward interpreter that executes EVM code.



Executes a call from the `caller` to the `target` in a new EVM instance.

:param caller: Account which initiated this call.
:type caller: `eth1spec.eth_types.Address`
:param target: Account whose code will be executed.
:type target: `eth1spec.eth_types.Address`
:param data: Array of bytes provided to the code in `target`.
:type data: `bytes`
:param value: Value to be transferred.
:type value: `eth1spec.base_types.Uint`
:param gas: Gas provided for the code in `target`.
:type gas: `eth1spec.base_types.Uint`
:param depth: Number of call/contract creation environments on the call stack.
:type depth: `eth1spec.base_types.Uint`
:param env: External items required for EVM execution.
:type env: `Environment`

:returns: **output** -- The tuple `(gas_left, logs)`, where `gas_left` is the remaining gas
          after execution, and logs is the list of `eth1spec.eth_types.Log`
          generated during execution.
:rtype: `Tuple[U256, List[eth1spec.eth_types.Log]]`


.. function:: process_call(caller: eth1spec.eth_types.Address, target: eth1spec.eth_types.Address, data: bytes, value: eth1spec.base_types.U256, gas: eth1spec.base_types.U256, depth: eth1spec.base_types.Uint, env: eth1spec.evm.Environment) -> Tuple[eth1spec.base_types.U256, List[eth1spec.eth_types.Log]]
   :noindexentry:




.. literalinclude:: /../src/eth1spec/evm/interpreter.py
   :language: python
   :lines: 23-90
