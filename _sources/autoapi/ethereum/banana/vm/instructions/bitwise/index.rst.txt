:mod:`ethereum.banana.vm.instructions.bitwise`
==============================================

.. py:module:: ethereum.banana.vm.instructions.bitwise

Ethereum Virtual Machine (EVM) Bitwise Instructions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

Implementations of the EVM bitwise instructions.


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::
   :nosignatures:

   ethereum.banana.vm.instructions.bitwise.bitwise_and
   ethereum.banana.vm.instructions.bitwise.bitwise_or
   ethereum.banana.vm.instructions.bitwise.bitwise_xor
   ethereum.banana.vm.instructions.bitwise.bitwise_not
   ethereum.banana.vm.instructions.bitwise.get_byte



Module Details
---------------

bitwise_and
~~~~~~~~~~~


.. function:: bitwise_and(evm: ethereum.banana.vm.Evm) -> None
   :noindexentry:

   Bitwise AND operation of the top 2 elements of the stack. Pushes the
   result back on the stack.

   :param evm: The current EVM frame.

   :raises ethereum.banana.vm.error.StackUnderflowError: If `len(stack)` is less than `2`.
   :raises ethereum.banana.vm.error.OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/banana/vm/instructions/bitwise.py
   :language: python
   :pyobject: bitwise_and

bitwise_or
~~~~~~~~~~


.. function:: bitwise_or(evm: ethereum.banana.vm.Evm) -> None
   :noindexentry:

   Bitwise OR operation of the top 2 elements of the stack. Pushes the
   result back on the stack.

   :param evm: The current EVM frame.

   :raises ethereum.banana.vm.error.StackUnderflowError: If `len(stack)` is less than `2`.
   :raises ethereum.banana.vm.error.OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/banana/vm/instructions/bitwise.py
   :language: python
   :pyobject: bitwise_or

bitwise_xor
~~~~~~~~~~~


.. function:: bitwise_xor(evm: ethereum.banana.vm.Evm) -> None
   :noindexentry:

   Bitwise XOR operation of the top 2 elements of the stack. Pushes the
   result back on the stack.

   :param evm: The current EVM frame.

   :raises ethereum.banana.vm.error.StackUnderflowError: If `len(stack)` is less than `2`.
   :raises ethereum.banana.vm.error.OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/banana/vm/instructions/bitwise.py
   :language: python
   :pyobject: bitwise_xor

bitwise_not
~~~~~~~~~~~


.. function:: bitwise_not(evm: ethereum.banana.vm.Evm) -> None
   :noindexentry:

   Bitwise NOT operation of the top element of the stack. Pushes the
   result back on the stack.

   :param evm: The current EVM frame.

   :raises ethereum.banana.vm.error.StackUnderflowError: If `len(stack)` is less than `1`.
   :raises ethereum.banana.vm.error.OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/banana/vm/instructions/bitwise.py
   :language: python
   :pyobject: bitwise_not

get_byte
~~~~~~~~


.. function:: get_byte(evm: ethereum.banana.vm.Evm) -> None
   :noindexentry:

   For a word (defined by next top element of the stack), retrieve the
   Nth byte (0-indexed and defined by top element of stack) from the
   left (most significant) to right (least significant).

   :param evm: The current EVM frame.

   :raises ethereum.banana.vm.error.StackUnderflowError: If `len(stack)` is less than `2`.
   :raises ethereum.banana.vm.error.OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/banana/vm/instructions/bitwise.py
   :language: python
   :pyobject: get_byte
